openapi: 3.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is invalid.

info:
  title: Todo-List API
  version: 0.0.1

paths:
  /api/user/login:
    post:
      summary: Login
      description: Login user
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string

      responses:
        200:
          description: Success login
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      first_name:
                        type: string
                      is_admin:
                        type: boolean
                  access_token:
                    type: string
                  message:
                    type: string
                    example: Login successfully.
  /api/user/register:
    post:
      summary: Register
      description: Register user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ first_name, email, password ]
              properties:
                first_name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        201:
          description: Registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      first_name:
                        type: string
                      email:
                        type: string
                        format: email
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                  access_token:
                    type: string
                  message:
                    type: string
                    example: Registration successful.

  /api/user/get-user:
    get:
      summary: Get user.
      description: Get auth data user.
      tags:
        - Auth

      responses:
        200:
          description: Success response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  email:
                    type: string
                    format: email
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time


  /api/todo-list:
    get:
      summary: Get all.
      description: Get all Todo List user.
      security:
        - bearerAuth: []
      tags:
        - Todo-List

      responses:
        200:
          description: JSON response all Todo-List.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  user_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  todos:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        todo_list_id:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  message:
                    type: string
                    example: Received.

        401:
          $ref: '#/components/responses/UnauthorizedError'
  /api/todo-list/create:
    post:
      summary: Create.
      description: Creating Todo-List for user.
      security:
        - bearerAuth: []
      tags:
        - Todo-List
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, user_id ]
              properties:
                name:
                  type: string
                  example: "New Todo List"
                user_id:
                  type: integer
                  example: 10

      responses:
        201:
          description: JSON created Todo-List.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  user_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Created.
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /api/todo-list/show/{id}:
    get:
      summary: Show.
      description: Show by id Todo-List.
      security:
        - bearerAuth: [ ]
      tags:
        - Todo-List
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string

      responses:
          200:
            description: Updated
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    user_id:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    todos:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          todo_list_id:
                            type: integer
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                    message:
                      type: string
                      example: Received.
          401:
            $ref: '#/components/responses/UnauthorizedError'

  /api/todo-list/update/{id}:
    put:
      summary: Update.
      description: Updating Todo-List.
      security:
        - bearerAuth: [ ]
      tags:
        - Todo-List
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name ]
              properties:
                name:
                  type: string

      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  user_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Updated
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /api/todo-list/delete/{id}:
    delete:
      summary: Delete
      description: Delete Todo-List
      security:
        - bearerAuth: [ ]
      tags:
        - Todo-List
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Deleted Todo-List
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deleted.
        401:
          $ref: '#/components/responses/UnauthorizedError'


  /api/todo/create:
    post:
      summary: Create.
      description: Creating Todo for Todo-List.
      security:
        - bearerAuth: [ ]
      tags:
        - Todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, todo_list_id ]
              properties:
                name:
                  type: string
                todo_list_id:
                  type: integer

      responses:
        201:
          description: JSON data created Todo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  todo_list_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Created.
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /api/todo/update/{id}:
    put:
      summary: Update.
      description: Updating Todo.
      security:
        - bearerAuth: [ ]
      tags:
        - Todo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name ]
              properties:
                name:
                  type: string

      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  todo_list_id:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Updated
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /api/todo/delete/{id}:
    delete:
      summary: Delete
      description: Delete Todo
      security:
        - bearerAuth: [ ]
      tags:
        - Todo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Deleted Todo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deleted.
        401:
          $ref: '#/components/responses/UnauthorizedError'
